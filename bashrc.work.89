# .bashrc

# User specific aliases and functions

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# functions
d2b()
{
    echo "obase=2; ibase=10; `echo $@ | tr a-z A-Z`" | bc
}
d2o()
{
    echo "obase=8; ibase=10; `echo $@ | tr a-z A-Z`" | bc
}
d2h()
{
    echo "obase=16; ibase=10; `echo $@ | tr a-z A-Z`" | bc
}

b2d()
{
    echo "obase=10; ibase=2; `echo $@ | tr a-z A-Z`" | bc
}

o2d()
{
    echo "obase=10; ibase=8; `echo $@ | tr a-z A-Z`" | bc
}

h2d()
{
    echo "obase=10; ibase=16; `echo $@ | tr a-z A-Z`" | bc
}

ulimit -c unlimited

export PS1="\[\e[32;1m\]\d \t\n\u:\n\w\n\n\$ \[\e[0m\]"

export LS_COLORS='no=00:fi=00:di=33:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:';

alias rm='rm -i'
alias vi='vim'
alias ll='ls -l -h --color=tty'
alias lla='ll -a'
alias pvim='vim +Project'
alias taillog='tail -f -n1000 `lf`'
alias lastfile='ls | tail -n1'
alias ff='ls | head -n1'
alias remake='make clean && clear && make 1>/dev/null'
alias grep='grep -E -a -n --color'

# erating 所有进程
alias erating_processes='echo "((USER|UID|PID).*(CMD|COMMAND))|rating|charge|ausvr|chargesvr|paysvr|logsvr|monitsvr"'

# dev 开发时使用的所有进程
alias dev_processes='echo "((USER|UID|PID).*(CMD|COMMAND))|./gatesvr|./ipccli|./tcpcli"'

# 查看 erating 所有进程状态
## pp 进程
## ph 进程
## pl 线程
alias pp='ps xukuser,comm | egrep -v "grep|ps xuk|vim" | egrep `erating_processes`'
alias ph='ps -ejFH --sort=cmd | egrep -v "grep |ps -ejF|vim" | egrep `erating_processes`'
alias pl='ps -ejFL --sort=cmd | egrep -v "grep |ps -ejF|vim" | egrep `erating_processes`'

# 查看 dev 所有进程状态
## ppd 进程
## phd 进程
## pld 线程
alias ppd='ps xukuser,comm | egrep -v "grep|ps xuk|vim" | egrep `dev_processes`'
alias phd='ps -ejFH --sort=cmd | egrep -v "grep |ps -ejF|vim" | egrep `dev_processes`'
alias pld='ps -ejFL --sort=cmd | egrep -v "grep |ps -ejF|vim" | egrep `dev_processes`'

# 查看运行环境状态
## 共享内存
## 进程
## 线程
## tcp连接
EPORT1=12345
DEVPORT1=12345
alias es='ipcs -m && ph  && pl  && netstat -antp 2>/dev/null | egrep "Proto.*Program name|$EPORT1"'
# alias ds='ipcs -m && phd && pld && netstat -antp 2>/dev/null | egrep "Proto.*Program name|$DEVPORT1"'

###############################################################################
# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# 查看历史命令
alias hi='history | less +G'

###############################################################################
# SCons
alias scons='scons -Q -f SConstruct.py'
alias dscons='scons -Q debug=1'
alias ascons='dscons && scons'
alias vascons='dscons verbose=1 && scons verbose=1'

LANG='zh_CN.gbk'
# LANG='en_US.UTF-8'
export LANG
# 用于让git可以显示中文log的
export LESSCHARSET=iso8859
export SVN_EDITOR=$HOME/bin/vim

PATH=$HOME/bin:$PATH
PATH=$HOME/libexec/git-core:$PATH
export PATH
# export ORACLE_HOME=$HOME/project
# export ESUITE_HOME=$HOME/project
# export PROJECT_HOME=$HOME/project
export GTEST_DIR=$HOME
export POCO_BASE=$HOME
export PUBLISHER_DIR=$HOME/bin/
export LD_LIBRARY_PATH=$ESUITE_HOME/lib/:$ORACLE_HOME/lib/:$HOME/lib/

# tail last file
tl()
{
    tail -n1000 -f `ls $1* | tail -n1`
}

# last file
lf()
{
    ls $1* | tail -n1
}

# get grep file list
gfl()
{
    cat $@ | cut -d : -f 1 | sort | uniq
}

source ~/.git-completion.bash

[ -f ~/.bashrc.auto.export ] && . ~/.bashrc.auto.export

fn ()
{
    # echo "$1" | awk -F"[| ,=]" '{for (i = 1; i <= NF; ++i) {printf "%03d: %s\n", i, $i;}}'
    echo "$2" | awk -F"[$1]" '{for (i = 1; i <= NF; ++i) {printf "%d:%s\n", i, $i;}}'
}
export ORACLE_BASE=/home/oracle/app/oracle
export ORACLE_HOME=$ORACLE_BASE/product/10.2.0/db_1
export ORACLE_SID=test1
export PATH=$ORACLE_HOME/bin:$PATH
